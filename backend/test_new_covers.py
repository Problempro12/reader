#!/usr/bin/env python
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–ª–æ–∂–µ–∫ –¥–ª—è –∫–Ω–∏–≥ –∏–∑ Flibusta —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π flibusta.su
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reader.settings')
django.setup()

from books.external_sources import search_external_books
from books.cover_sources import get_book_cover_url
import json

def test_new_cover_system():
    """–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –æ–±–ª–æ–∂–µ–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π flibusta.su"""
    print("=== –¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–ª–æ–∂–µ–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π flibusta.su ===\n")
    
    try:
        # –ò—â–µ–º –∫–Ω–∏–≥–∏ –≤ Flibusta
        print("üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –≤ Flibusta...")
        results = search_external_books('–ü—É—à–∫–∏–Ω', limit=3, use_tor=False)
        flibusta_books = results.get('flibusta', [])
        
        print(f"üìö –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥ –≤ Flibusta: {len(flibusta_books)}\n")
        
        for i, book in enumerate(flibusta_books):
            print(f"üìñ –ö–Ω–∏–≥–∞ {i+1}:")
            print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {book.get('title')}")
            print(f"  –ê–≤—Ç–æ—Ä: {book.get('author')}")
            print(f"  –ò—Å—Ç–æ—á–Ω–∏–∫: {book.get('source')}")
            print(f"  ID –∫–Ω–∏–≥–∏: {book.get('source_id', '–ù–µ –Ω–∞–π–¥–µ–Ω')}")
            
            cover_url = book.get('cover_url')
            print(f"  –û–±–ª–æ–∂–∫–∞: {cover_url}")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–±–ª–æ–∂–∫—É –Ω–∞–ø—Ä—è–º—É—é —Å ID
            title = book.get('title')
            author = book.get('author')
            book_id = book.get('source_id')
            
            if title and author:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å ID
                direct_cover = get_book_cover_url(title, author, book_id)
                print(f"  –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–ª–æ–∂–∫–∏ (—Å ID {book_id}): {direct_cover}")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ ID (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)
                direct_cover_no_id = get_book_cover_url(title, author)
                print(f"  –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–ª–æ–∂–∫–∏ (–±–µ–∑ ID): {direct_cover_no_id}")
                
                # –ê–Ω–∞–ª–∏–∑ —É–ª—É—á—à–µ–Ω–∏–π
                if (direct_cover != '/placeholder-book.svg' and 
                    direct_cover_no_id == '/placeholder-book.svg'):
                    print(f"  üéâ –û–±–ª–æ–∂–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è flibusta.su (ID: {book_id})!")
                elif (direct_cover != direct_cover_no_id and 
                      'flibusta.su' in direct_cover):
                    print(f"  üéâ –û–±–ª–æ–∂–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —Å flibusta.su –≤–º–µ—Å—Ç–æ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤!")
            
            if cover_url and cover_url != '/placeholder-book.svg':
                print(f"  ‚úÖ –†–µ–∞–ª—å–Ω–∞—è –æ–±–ª–æ–∂–∫–∞ –Ω–∞–π–¥–µ–Ω–∞!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—É–¥–∞ –æ–±–ª–æ–∂–∫–∞
                if 'googleapis.com' in cover_url:
                    print(f"  üìö –ò—Å—Ç–æ—á–Ω–∏–∫ –æ–±–ª–æ–∂–∫–∏: Google Books")
                elif 'covers.openlibrary.org' in cover_url:
                    print(f"  üìö –ò—Å—Ç–æ—á–Ω–∏–∫ –æ–±–ª–æ–∂–∫–∏: Open Library")
                elif 'flibusta.su' in cover_url:
                    print(f"  üìö –ò—Å—Ç–æ—á–Ω–∏–∫ –æ–±–ª–æ–∂–∫–∏: Flibusta.su")
                elif 'flibusta' in cover_url:
                    print(f"  üìö –ò—Å—Ç–æ—á–Ω–∏–∫ –æ–±–ª–æ–∂–∫–∏: Flibusta")
                else:
                    print(f"  üìö –ò—Å—Ç–æ—á–Ω–∏–∫ –æ–±–ª–æ–∂–∫–∏: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
            else:
                print(f"  ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞")
            
            print()
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç - –ø—Ä—è–º–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏
        print("\nüß™ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–ª–æ–∂–∫–∏:")
        test_title = "–ï–≤–≥–µ–Ω–∏–π –û–Ω–µ–≥–∏–Ω"
        test_author = "–ü—É—à–∫–∏–Ω"
        
        print(f"–ò—â–µ–º –æ–±–ª–æ–∂–∫—É –¥–ª—è: '{test_title}' –∞–≤—Ç–æ—Ä '{test_author}'")
        direct_cover = get_book_cover_url(test_title, test_author)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç (–±–µ–∑ ID): {direct_cover}")
        
        # –¢–µ—Å—Ç —Å —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º ID
        test_id = "12345"
        direct_cover_with_id = get_book_cover_url(test_title, test_author, test_id)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç (—Å ID {test_id}): {direct_cover_with_id}")
        
        if direct_cover and direct_cover != '/placeholder-book.svg':
            print("‚úÖ –ü—Ä—è–º–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("‚ö†Ô∏è –ü—Ä—è–º–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä–Ω—É–ª–æ –∑–∞–≥–ª—É—à–∫—É")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_new_cover_system()