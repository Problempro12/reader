#!/usr/bin/env python
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∏–º–ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ Tor —Å onion-–∞–¥—Ä–µ—Å–æ–º
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reader.settings')
django.setup()

from books.external_sources import search_external_books, import_book_from_external_source

def demo_tor_connection():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ Tor"""
    
    print("=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –ß–ï–†–ï–ó TOR ===")
    print("üßÖ Onion-–∞–¥—Ä–µ—Å: http://flibustaongezhld6dibs2dps6vm4nvqg2kp7vgowbu76tzopgnhazqd.onion")
    print("üîí Tor SOCKS5 –ø—Ä–æ–∫—Å–∏: 127.0.0.1:9150")
    print()
    
    # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ clearnet (–±–µ–∑ Tor)
    print("üì° –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ clearnet (use_tor=False)")
    try:
        results_clearnet = search_external_books(
            query="–ü—É—à–∫–∏–Ω",
            limit=1,
            use_tor=False,
            sources=['flibusta']
        )
        
        books_clearnet = results_clearnet.get('flibusta', [])
        if books_clearnet:
            book = books_clearnet[0]
            links = book.get('download_links', [])
            if links:
                first_link = links[0]['url'] if isinstance(links, list) else list(links.values())[0]['url']
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: {book.get('title')}")
                print(f"   üåê URL: {first_link}")
                print(f"   üìç –î–æ–º–µ–Ω: {'clearnet –∑–µ—Ä–∫–∞–ª–æ' if 'flibusta.is' in first_link else '–¥—Ä—É–≥–æ–π'}")
        else:
            print("   ‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Tor (onion)
    print("üßÖ –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Tor (use_tor=True)")
    try:
        results_tor = search_external_books(
            query="–ü—É—à–∫–∏–Ω",
            limit=1,
            use_tor=True,
            sources=['flibusta']
        )
        
        books_tor = results_tor.get('flibusta', [])
        if books_tor:
            book = books_tor[0]
            links = book.get('download_links', [])
            if links:
                first_link = links[0]['url'] if isinstance(links, list) else list(links.values())[0]['url']
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: {book.get('title')}")
                print(f"   üßÖ URL: {first_link}")
                print(f"   üìç –î–æ–º–µ–Ω: {'onion-–∞–¥—Ä–µ—Å' if '.onion' in first_link else '–Ω–µ onion'}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç
                print(f"   ‚¨áÔ∏è  –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ Tor...")
                content = import_book_from_external_source(
                    book_data=book,
                    source='flibusta',
                    download_format='fb2',
                    use_tor=True
                )
                
                if content and len(content.strip()) > 50:
                    print(f"   ‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    print(f"   üìÑ –ù–∞—á–∞–ª–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {content[:100]}...")
                else:
                    print(f"   ‚ö†Ô∏è  –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ")
        else:
            print("   ‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    print("=== –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï ===")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ Tor")
    print("üßÖ –ü—Ä–∏ use_tor=True –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è onion-–∞–¥—Ä–µ—Å")
    print("üåê –ü—Ä–∏ use_tor=False –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è clearnet –∑–µ—Ä–∫–∞–ª–∞")
    print("üîí –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ onion-–∞–¥—Ä–µ—Å—É –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ SOCKS5 –ø—Ä–æ–∫—Å–∏")

if __name__ == '__main__':
    demo_tor_connection()