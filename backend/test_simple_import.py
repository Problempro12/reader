#!/usr/bin/env python
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –æ–¥–Ω–æ–π –∫–Ω–∏–≥–∏ –∏–∑ Flibusta
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reader.settings')
django.setup()

from books.external_sources import search_external_books, import_book_from_external_source
from books.models import Book, Author
from books.views import import_external_book_view
from users.models import User
from django.test import RequestFactory
from django.http import JsonResponse
import json

def test_search_and_import():
    """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏ –∏–º–ø–æ—Ä—Ç–∞ –∫–Ω–∏–≥–∏"""
    
    print("=== –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏ –∏–º–ø–æ—Ä—Ç–∞ –∫–Ω–∏–≥–∏ –∏–∑ Flibusta ===")
    
    # 1. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥
    query = "–ü—É—à–∫–∏–Ω"
    print(f"\n1. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {query}")
    
    try:
        results = search_external_books(
            query=query,
            limit=5,
            use_tor=True,
            sources=['flibusta']
        )
        
        flibusta_books = results.get('flibusta', [])
        print(f"–ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: {len(flibusta_books)}")
        
        if not flibusta_books:
            print("‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        # –í—ã–≤–æ–¥–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏
        for i, book in enumerate(flibusta_books):
            print(f"\nüìö –ö–Ω–∏–≥–∞ {i+1}:")
            print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {book.get('title')}")
            print(f"  –ê–≤—Ç–æ—Ä: {book.get('author')}")
            print(f"  –û–ø–∏—Å–∞–Ω–∏–µ: {book.get('description', '')[:100]}...")
            print(f"  –°—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {len(book.get('download_links', []))}")
            print(f"  Source ID: {book.get('source_id')}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
            for link in book.get('download_links', []):
                print(f"    - {link.get('format')}: {link.get('url')}")
        
        # 2. –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø–µ—Ä–≤–æ–π –∫–Ω–∏–≥–∏
        first_book = flibusta_books[0]
        print(f"\n2. –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∫–Ω–∏–≥–∏: {first_book.get('title')}")
        
        try:
            content = import_book_from_external_source(
                book_data=first_book,
                source='flibusta',
                download_format='fb2',
                use_tor=True
            )
            
            if content:
                print(f"‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
                print(f"   –†–∞–∑–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                print(f"   –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤: {content[:200]}...")
                
                # 3. –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏ –≤ –ë–î
                print(f"\n3. –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –≤ –ë–î")
                
                try:
                    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞
                    author_name = first_book.get('author', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä')
                    author, created = Author.objects.get_or_create(
                        name=author_name,
                        defaults={'bio': '–ê–≤—Ç–æ—Ä –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ Flibusta'}
                    )
                    print(f"   –ê–≤—Ç–æ—Ä: {author.name} (—Å–æ–∑–¥–∞–Ω: {created})")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫–Ω–∏–≥–∏
                    existing_book = Book.objects.filter(
                        title=first_book.get('title'),
                        author=author
                    ).first()
                    
                    if existing_book:
                        print(f"üìñ –ö–Ω–∏–≥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î: ID {existing_book.id}")
                    else:
                        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–∏–≥—É
                        new_book = Book.objects.create(
                            title=first_book.get('title'),
                            author=author,
                            content=content,
                            description=first_book.get('description', ''),
                            source='flibusta',
                            source_id=first_book.get('source_id')
                        )
                        print(f"‚úÖ –ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ –ë–î: ID {new_book.id}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–∏–≥–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª–∞—Å—å
                        saved_book = Book.objects.get(id=new_book.id)
                        print(f"   –ü—Ä–æ–≤–µ—Ä–∫–∞: {saved_book.title} by {saved_book.author.name}")
                        print(f"   –†–∞–∑–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤ –ë–î: {len(saved_book.content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ë–î: {e}")
                    
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–Ω–∏–≥–∏")
                print(f"   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print(f"   - –ù–µ—Ç —Å—Å—ã–ª–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
                print(f"   - –°—Å—ã–ª–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
                print(f"   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–æ–º —Ñ–∞–π–ª–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
            import traceback
            traceback.print_exc()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ Flibusta\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    try:
        book_count = Book.objects.count()
        author_count = Author.objects.count()
        user_count = User.objects.count()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î:")
        print(f"   –ö–Ω–∏–≥–∏: {book_count}")
        print(f"   –ê–≤—Ç–æ—Ä—ã: {author_count}")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {user_count}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_search_and_import()
    
    print("\n‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")