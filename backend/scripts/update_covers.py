#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±–ª–æ–∂–µ–∫ –∫–Ω–∏–≥
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reader.settings')
django.setup()

from books.cover_sources import update_existing_books_covers
from books.models import Book
from django.db import models

def main():
    print("=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±–ª–æ–∂–µ–∫ –∫–Ω–∏–≥ ===")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        total_books = Book.objects.count()
        print(f"üìö –í—Å–µ–≥–æ –∫–Ω–∏–≥ –≤ –±–∞–∑–µ: {total_books}")
        
        # –°—á–∏—Ç–∞–µ–º –∫–Ω–∏–≥–∏ –±–µ–∑ –æ–±–ª–æ–∂–µ–∫
        books_without_covers = Book.objects.filter(
            models.Q(cover_url__isnull=True) | 
            models.Q(cover_url='') | 
            models.Q(cover_url='/placeholder-book.svg')
        ).count()
        
        books_with_real_covers = Book.objects.exclude(
            models.Q(cover_url__isnull=True) | 
            models.Q(cover_url='') | 
            models.Q(cover_url='/placeholder-book.svg')
        ).count()
        
        print(f"üñºÔ∏è  –ö–Ω–∏–≥ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –æ–±–ª–æ–∂–∫–∞–º–∏: {books_with_real_covers}")
        print(f"üìã –ö–Ω–∏–≥ –±–µ–∑ –æ–±–ª–æ–∂–µ–∫/—Å –∑–∞–≥–ª—É—à–∫–∞–º–∏: {books_without_covers}")
        print()
        
        if books_without_covers == 0:
            print("‚úÖ –í—Å–µ –∫–Ω–∏–≥–∏ —É–∂–µ –∏–º–µ—é—Ç –æ–±–ª–æ–∂–∫–∏!")
            return
        
        print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±–ª–æ–∂–µ–∫ –¥–ª—è {books_without_covers} –∫–Ω–∏–≥...")
        print()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±–ª–æ–∂–∫–∏
        updated_count = update_existing_books_covers()
        
        print()
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–Ω–∏–≥: {updated_count}")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        books_with_real_covers_after = Book.objects.exclude(
            models.Q(cover_url__isnull=True) | 
            models.Q(cover_url='') | 
            models.Q(cover_url='/placeholder-book.svg')
        ).count()
        
        books_with_placeholders = Book.objects.filter(
            cover_url='/placeholder-book.svg'
        ).count()
        
        print(f"üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –ö–Ω–∏–≥ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –æ–±–ª–æ–∂–∫–∞–º–∏: {books_with_real_covers_after}")
        print(f"   ‚Ä¢ –ö–Ω–∏–≥ —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏: {books_with_placeholders}")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ã—Ö –æ–±–ª–æ–∂–µ–∫: {books_with_real_covers_after - books_with_real_covers}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == '__main__':
    main()