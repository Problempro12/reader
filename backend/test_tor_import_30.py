#!/usr/bin/env python
"""
–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ 30 –∫–Ω–∏–≥ –∏–∑ Flibusta —á–µ—Ä–µ–∑ Tor (onion-–∞–¥—Ä–µ—Å)
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reader.settings')
django.setup()

from books.external_sources import search_external_books, import_book_from_external_source
from books.models import Book, Author
from users.models import User
import time

def test_mass_import_via_tor():
    """–¢–µ—Å—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –∫–Ω–∏–≥ —á–µ—Ä–µ–∑ Tor"""
    
    print("=== –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ 30 –∫–Ω–∏–≥ –∏–∑ Flibusta —á–µ—Ä–µ–∑ Tor (onion) ===")
    print("üßÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è onion-–∞–¥—Ä–µ—Å: http://flibustaongezhld6dibs2dps6vm4nvqg2kp7vgowbu76tzopgnhazqd.onion")
    print("üîí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Tor SOCKS5 –ø—Ä–æ–∫—Å–∏")
    
    # –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∞–∑–Ω—ã—Ö –∫–Ω–∏–≥
    search_queries = [
        "–ü—É—à–∫–∏–Ω", "–¢–æ–ª—Å—Ç–æ–π", "–î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π", "–ß–µ—Ö–æ–≤", "–ì–æ–≥–æ–ª—å",
        "–¢—É—Ä–≥–µ–Ω–µ–≤", "–õ–µ—Ä–º–æ–Ω—Ç–æ–≤", "–ë—É–ª–≥–∞–∫–æ–≤", "–ù–∞–±–æ–∫–æ–≤", "–ë—É–Ω–∏–Ω",
        "–ï—Å–µ–Ω–∏–Ω", "–ú–∞—è–∫–æ–≤—Å–∫–∏–π", "–ë–ª–æ–∫", "–ê—Ö–º–∞—Ç–æ–≤–∞", "–¶–≤–µ—Ç–∞–µ–≤–∞",
        "–ü–∞—Å—Ç–µ—Ä–Ω–∞–∫", "–°–æ–ª–∂–µ–Ω–∏—Ü—ã–Ω", "–®–æ–ª–æ—Ö–æ–≤", "–ì–æ—Ä—å–∫–∏–π", "–ö—É–ø—Ä–∏–Ω",
        "–°–∞–ª—Ç—ã–∫–æ–≤-–©–µ–¥—Ä–∏–Ω", "–û—Å—Ç—Ä–æ–≤—Å–∫–∏–π", "–§–æ–Ω–≤–∏–∑–∏–Ω", "–ì—Ä–∏–±–æ–µ–¥–æ–≤", "–ö—Ä—ã–ª–æ–≤",
        "–ñ—É–∫–æ–≤—Å–∫–∏–π", "–î–µ—Ä–∂–∞–≤–∏–Ω", "–ö–∞—Ä–∞–º–∑–∏–Ω", "–†–∞–¥–∏—â–µ–≤", "–õ–æ–º–æ–Ω–æ—Å–æ–≤"
    ]
    
    successful_imports = 0
    failed_imports = 0
    total_books_found = 0
    
    for i, query in enumerate(search_queries, 1):
        print(f"\nüìñ {i}/30: –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}'")
        
        try:
            # –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Tor
            results = search_external_books(
                query=query,
                limit=1,  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∫–Ω–∏–≥—É
                use_tor=True,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Tor –¥–ª—è onion-–∞–¥—Ä–µ—Å–∞
                sources=['flibusta']
            )
            
            flibusta_books = results.get('flibusta', [])
            total_books_found += len(flibusta_books)
            
            if not flibusta_books:
                print(f"   ‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                failed_imports += 1
                continue
                
            book_data = flibusta_books[0]
            print(f"   üìö –ù–∞–π–¥–µ–Ω–∞: {book_data.get('title')} - {book_data.get('author')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è onion-–∞–¥—Ä–µ—Å
            download_links = book_data.get('download_links', [])
            if download_links:
                first_link = list(download_links.values())[0] if isinstance(download_links, dict) else download_links[0]
                if 'onion' in first_link.get('url', ''):
                    print(f"   üßÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è onion-–∞–¥—Ä–µ—Å")
                else:
                    print(f"   ‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è onion-–∞–¥—Ä–µ—Å")
            
            # –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ Tor
            print(f"   ‚¨áÔ∏è  –ò–º–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ Tor...")
            content = import_book_from_external_source(
                book_data=book_data,
                source='flibusta',
                download_format='fb2',
                use_tor=True  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º Tor
            )
            
            if content and len(content.strip()) > 100:
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤)")
                successful_imports += 1
            else:
                print(f"   ‚ùå –ò–º–ø–æ—Ä—Ç –Ω–µ —É–¥–∞–ª—Å—è (–ø—É—Å—Ç–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ)")
                failed_imports += 1
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            failed_imports += 1
            
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        time.sleep(1)
    
    print(f"\n=== –ò–¢–û–ì–ò –ò–ú–ü–û–†–¢–ê –ß–ï–†–ï–ó TOR ===")
    print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: 30")
    print(f"üìö –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: {total_books_found}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤: {successful_imports}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤: {failed_imports}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(successful_imports/30)*100:.1f}%")
    print(f"üßÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —á–µ—Ä–µ–∑ onion-–∞–¥—Ä–µ—Å Flibusta")
    print(f"üîí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Tor SOCKS5 –ø—Ä–æ–∫—Å–∏ (127.0.0.1:9150)")

if __name__ == '__main__':
    test_mass_import_via_tor()