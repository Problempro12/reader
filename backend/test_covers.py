#!/usr/bin/env python
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–ª–æ–∂–µ–∫ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞ Flibusta
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reader.settings')
django.setup()

from books.external_sources import search_external_books
import json

def test_covers():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–ª–æ–∂–µ–∫"""
    print("=== –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–ª–æ–∂–µ–∫ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞ ===")
    
    try:
        results = search_external_books('–ü—É—à–∫–∏–Ω', limit=2, use_tor=False)
        flibusta_books = results.get('flibusta', [])
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: {len(flibusta_books)}")
        
        for i, book in enumerate(flibusta_books):
            print(f"\nüìö –ö–Ω–∏–≥–∞ {i+1}:")
            print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {book.get('title')}")
            print(f"  –ê–≤—Ç–æ—Ä: {book.get('author')}")
            print(f"  –ü–æ–ª—è –∫–Ω–∏–≥–∏: {list(book.keys())}")
            print(f"  Cover URL: {book.get('cover_url')}")
            
            if book.get('cover_url'):
                print(f"  ‚úÖ –û–±–ª–æ–∂–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {book.get('cover_url')}")
            else:
                print(f"  ‚ùå –û–±–ª–æ–∂–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_covers()