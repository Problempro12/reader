#!/usr/bin/env python
"""
–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –∫–Ω–∏–≥–∏ –∏–∑ Flibusta —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ–±–ª–æ–∂–∫–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'reader.settings')
django.setup()

from books.external_sources import search_external_books
from books.models import Book, Author
from django.contrib.auth.models import User
import json

def test_import_with_cover():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –∫–Ω–∏–≥–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ–±–ª–æ–∂–∫–∏"""
    print("=== –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –∫–Ω–∏–≥–∏ –∏–∑ Flibusta —Å –æ–±–ª–æ–∂–∫–æ–π ===")
    
    try:
        # –ü–æ–∏—Å–∫ –∫–Ω–∏–≥
        results = search_external_books('–ü—É—à–∫–∏–Ω', limit=1, use_tor=False)
        flibusta_books = results.get('flibusta', [])
        
        if not flibusta_books:
            print("‚ùå –ö–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
            
        book_data = flibusta_books[0]
        print(f"üìö –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–∏–≥–∞: {book_data.get('title')}")
        print(f"üë§ –ê–≤—Ç–æ—Ä: {book_data.get('author')}")
        print(f"üñºÔ∏è –û–±–ª–æ–∂–∫–∞: {book_data.get('cover_url')}")
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ—Ä–∞
        author, created = Author.objects.get_or_create(
            name=book_data.get('author', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä')
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É
        book, created = Book.objects.get_or_create(
            title=book_data.get('title'),
            author=author,
            defaults={
                'description': book_data.get('description', ''),
                'content': '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–Ω–∏–≥–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–∑–∂–µ.',
                'cover_url': book_data.get('cover_url')
            }
        )
        
        if created:
            print(f"‚úÖ –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {book.id}")
        else:
            print(f"‚ÑπÔ∏è –ö–Ω–∏–≥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å ID: {book.id}")
            
        print(f"üìñ –ù–∞–∑–≤–∞–Ω–∏–µ: {book.title}")
        print(f"üë§ –ê–≤—Ç–æ—Ä: {book.author.name}")
        print(f"üñºÔ∏è URL –æ–±–ª–æ–∂–∫–∏: {book.cover_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–ª–æ–∂–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
        if book.cover_url:
            if book.cover_url == '/placeholder-book.svg':
                print("‚úÖ –ó–∞–≥–ª—É—à–∫–∞ –æ–±–ª–æ–∂–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print(f"‚úÖ –û–±–ª–æ–∂–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {book.cover_url}")
        else:
            print("‚ùå –û–±–ª–æ–∂–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_import_with_cover()